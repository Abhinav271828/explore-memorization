# %% [markdown]
# # Data Generation for `Expr`

# %% [markdown]
# ## Grammar
# The base grammar we use for the `Expr` language is defined by the CFG:
# ```
# Expr -> Sub (- Expr)?
# Sub -> Add (+ Sub)?
# Add -> Mult (* Add)?
# Mult -> Div (/ Mult)?
# Div -> Dig+ | [ Base ]
# Dig -> \d
# ```
# It is deterministic and can be generated by assigning a uniform probability across all expansions (50/50 for `Expr`, `Sub`, `Add`, and `Mult`, and $\frac{1}{11}$ for `Div`).

# %% [markdown]
# ## Code

# %%
from pcfg import PCFG
from tqdm import tqdm
from statistics import mean, median, stdev

# %%
DATASET_SIZE = 1000000
FILENAME = '../data/base-data.txt'

# %%
g = PCFG.fromstring("""
Expr -> Sub [0.75] | Expr "-" Sub [0.25]
Sub -> Add [0.75] | Sub "+" Add [0.25]
Add -> Mul [0.75] | Add "*" Mul [0.25]
Mul -> Div [0.75] | Mul "/" Div [0.25]
Div -> "0" [0.09] | "1" [0.09] | "2" [0.09] | "3" [0.09] | "4" [0.09] | "5" [0.09] | "6" [0.09] | "7" [0.09] | "8" [0.09] | "9" [0.09] | "(" Expr ")" [0.1]
""")

# %%
with open(FILENAME, 'a') as f:
    for s in tqdm(g.generate(DATASET_SIZE), total=DATASET_SIZE):
        f.write(s + '\n')

# %%
lengths = []
for line in open(FILENAME):
    lengths.append(len(line.strip().split()))
print("Mean", mean(lengths))
print("Stdev", stdev(lengths))
print("Median", median(lengths))


